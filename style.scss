body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
.br{
    margin:100px 0;
}
$color-test: #e96900;
$color-primary: $color-test;

.container {
    $size: 100px;

    .item {
        width: $size;
        height: $size;
        margin: 20px;
        background: tomato;

        &.active {
            color: tomato;
            background: #ccc;
        }

        &:nth-child(1) {
            font-weight: bold;
        }

        .desc {
            font-size: 14px;
        }
    }
}

.container2 {
    $w: 100px;
    $h: 100px;

    .item2 {
        width: $w;
        height: $h;
    }

    @at-root .outside_box {
        width: $w;
        height: $h;
        background: #ddd;
    }
}

.outside_box {
    color: $color-primary;

    font: {
        size: 16px;
        weight: bold;
    }

    ;

    margin: {
        top: 10px;
        left: 10px;
    }

    ;

    padding: {
        bottom: 10px;
        right: 10px;
    }
}

.global-wrap {
    $global-test: blue;
}

.global1 {
    $global-test: orange !global;
    background: $global-test;
}

.global2 {
    background: $global-test;
}

.global3 {
    $global-test: pink;
    background: $global-test;
}

.global4 {
    background: $global-test;
}

$default-color: beige;

.default {
    width: 100px;
    height: 100px;
    $default-color: green !default;
    background: $default-color;
}

.calc {
    $size2: 100px;
    width: $size2;
    height: $size2;
    background: yellow;

    .calc_child {
        width: $size2 / 2;
        height: 50px;
        background: purple;
    }
}
.calc:after{
    // 속성값 시작이 ""면 ""로 결과 반환 ("hello World")
    content:"hello" + World;
    // 속성값 시작이 ""가 아니면 ""없이 반환 (row-reverse wrap)
    flex-flow: row + "-reverse" + " " + wrap;
}
$testLogic: 100px;
.logic{
    display:block;
    @if($testLogic > 50px and $testLogic > 90px) {
        width: 200px;
        height:100px;
        background: pink;
    }
}
.logic2{
    width: 100px;
    height: 100px;
    background: gray;
    @if not ($testLogic == 50px) {
        border-radius: 30px;
    }
}
// * 재사용 Mixins *
@mixin size ($w, $h) {
    width: $w;
    height: $h;
    background: red;
    margin:10px 0;
}
.mix_box{
    @include size(100px, 100px);
}
.mix_box2{
    @include size(50px, 50px);
}
// 축약형
@mixin size2 ($w: 100px, $h: 100px) {
    width: $w;
    height: $h;
    background: brown;
    margin:10px 0;
}
.mix_box3{
    @include size2
}
.mix_box4{
    @include size2($h: 200px);
}
// 축약형2
@mixin size3 {
    width: 50px;
    height: 50px;
    background: magenta;
}
.include {
    @include size3;
}
@mixin small {
    display:flex;
    justify-content: center;
    align-items: center;
    width: 150px;
    height: 150px;
    font: {
        size: 12px;
        weight: bold;
    }
    background: pink;
    // 가상요소도 가능
    &:after{
      content:'가상요소도 가능';  
    }
    // 사용 할 요소 안에 span태그가 있는데 그 span태그의 class가 hidden일때
    span.hidden {
        width: 50px;
        height: 50px;
        background: blue;
        color:#fff;
    }
}
.include2 {
    @include small;
}


// * mixin 키워드 변수 *
@mixin keyword($w: 1px, $c: yellow) {
    border: $w solid $c;
}

// 순서상 첫번째 파라미터만 받아옴 그런데 나는 색을 바꾸고싶음  
.keyword{
    .k-item{
        background: green;
        @include keyword(5px);
    }
}
// 솔루션 
.keyword{
    .k-item{
        background: green;
        @include keyword($c: blue);
    }
}

// * 가변인수 *
// @mixin var($w, $h, $bg) {
//     width: $w;
//     height: $h;
//     background: $bg;
// }
// .test{
//     // 4~5까지 받아줄 파라미터가 없다 
//     @include var(1, 2, 3, 4, 5)
// }
// 솔루션 
@mixin var($w, $h, $bg...) {
    width: $w;
    height: $h;
    background: $bg;
}
.test{
    @include var(1, 2, 3, 4, 5)
    // width: 1, height: 2, background: 3,4,5
}

// 가변인수2
@mixin font(
    $style: normal,
    $weight: normal,
    $size: 18px,
    $family: sans-serif
) {
    font: {
        style: $style;
        weight: $weight;
        size: $size;
        family: $family;
    }
}
.div{
    // 문자열 담긴 변수 생성
    $font-values: italic, bold, 20px, sans-serif;
    
    // style: italic, weight:bold, size:20px ...
    @include font($font-values...);
}

@mixin font2(
    $style: normal,
    $weight: normal,
    $size: 18px,
    $family: sans-serif
) {
    font: {
        style: $style;
        weight: $weight;
        size: $size;
        family: $family;
    }
}
.span{
    // 필요한 값만 키워드인수로 변수에 담아 전달 
    $font-values: (style: italic, size: 22px);
    @include font2($font-values...);
}

@mixin font3(
    $style: normal,
    $weight: normal,
    $size: 18px,
    $family: sans-serif
) {
    font: {
        style: $style;
        weight: $weight;
        size: $size;
        family: $family;
    }
}
.a{
    // 필요한 값만 키워드 인수로 전달 
    @include font3((style: italic, size:15px)...);
}

@mixin icon ($url) {
    &:after {
        content: $url; 
        @content;
    }
}
.content1{
    @include icon('./logo1.png')
}
.content2{
    @include icon('./logo2.png') {
        display:block;
        width: 10px;
        height: 10px;
        background: pink;
    }
}

// Extend 확장 
// extend 사용은 권장하지 않는다. Mixin으로 대체하자! 
.e-btn{
    margin:50px 0;
    border-radius: 20px;
    padding:5px 0;
    cursor: pointer;
    color:#fff;
    background: #000;
}
.e-btn2{
    @extend .e-btn;
    background: dodgerblue;
}

// 함수 
@function columns($num: 1, $columns: 12, $Mwidth: 1200px) {
    @return $Mwidth * ($num / $columns);
}
.function-container{
    display:flex;
    width: 100%;
    background: orange;
    .item:nth-child(1) {
        width: columns();
        background: beige;
    }
    .item:nth-child(2) {
        width: columns(6);
        background: yellow;
    }
    .item:nth-child(3) {
        width: columns(5);
        background: tomato;
    }
}
// if 함수 
.test3{
    $width: 200px;
    div {
        width: if($width > 50px, $width, null);
        background: brown;
    }
}